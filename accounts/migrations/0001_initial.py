# Generated by Django 3.1.2 on 2020-10-28 16:09

import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, help_text='Timestamp at which this record was created.')),
                ('modified_on', models.DateTimeField(auto_now_add=True, help_text='Timestamp at which this record was last modified.')),
                ('code', models.CharField(db_index=True, help_text='Permission code.', max_length=128, unique=True)),
                ('name', models.CharField(help_text='Name of the permission.', max_length=255)),
                ('resource', models.CharField(choices=[('employee', 'Employee'), ('room', 'Room')], db_index=True, help_text='Resource on which this permission is valid.', max_length=64)),
            ],
            options={
                'unique_together': {('resource', 'code')},
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, help_text='Timestamp at which this record was created.')),
                ('modified_on', models.DateTimeField(auto_now_add=True, help_text='Timestamp at which this record was last modified.')),
                ('name', models.CharField(help_text='Name of the team.', max_length=32, unique=True)),
                ('description', models.TextField(blank=True, default=None, help_text='Description about this team.', null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, help_text='Timestamp at which this record was created.')),
                ('modified_on', models.DateTimeField(auto_now_add=True, help_text='Timestamp at which this record was last modified.')),
                ('name', models.CharField(help_text='Name of the role.', max_length=128, unique=True)),
                ('permissions', models.ManyToManyField(to='accounts.Permission')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='auth.user')),
                ('created_on', models.DateTimeField(auto_now_add=True, help_text='Timestamp at which this record was created.')),
                ('modified_on', models.DateTimeField(auto_now_add=True, help_text='Timestamp at which this record was last modified.')),
                ('employee_id', models.CharField(db_index=True, help_text='Unique employee code.', max_length=64, unique=True)),
                ('phone_no', models.CharField(help_text='Phone number (along with country code) of the employee.', max_length=32)),
                ('position', models.CharField(help_text='Position/Designation of the employee.', max_length=64)),
                ('role', models.ForeignKey(help_text='Role of this employee.', null=True, on_delete=django.db.models.deletion.PROTECT, to='accounts.role')),
                ('team', models.ForeignKey(help_text='Team in which this employee belongs to.', null=True, on_delete=django.db.models.deletion.PROTECT, to='accounts.team')),
            ],
            options={
                'verbose_name': 'Employee',
                'verbose_name_plural': 'Employees',
            },
            bases=('auth.user', models.Model),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
